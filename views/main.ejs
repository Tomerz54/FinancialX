<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FinancialX</title>
    <!-- remove styles when testing with chat gpt-->
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            color: #333;
            display: flex;
            transition: background-color 0.3s, color 0.3s;
        }

        body.dark-theme {
            background-color: #121212;
            color: #e0e0e0;
        }

        .sidebar {
            width: 150px;
            height: 100vh;
            color: white;
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            padding: 15px 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            transition: background-color 0.3s;
        }

        .dark-theme .sidebar {
            background: linear-gradient(135deg, #1a237e 0%, #0d47a1 100%);
        }

        .logo {
            font-size: 28px;
            text-decoration: none;
            font-weight: bold;
            color: white;
            cursor: pointer;
            margin-bottom: 30px;
        }

        .logo:hover {
            color: rgb(39, 47, 155);
        }

        nav ul {
            list-style-type: none;
            padding: 0;
        }

        nav ul li {
            margin-bottom: 20px;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            transition: color 0.3s;
        }

        nav ul li a:hover {
            color: #3754a5;
        }

        .main-content {
            margin-left: 200px; /* Adjusted for sidebar */
            padding: 30px;
            flex: 1;
            display: flex;
            flex-direction: column;
            background-color: #f4f4f9;
            transition: background-color 0.3s;
        }

        .dark-theme .main-content {
            background-color: #1e1e1e;
        }

        .hero {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            color: white;
            text-align: center;
            padding: 80px 20px;
            margin-bottom: 30px;
            border-radius: 0 0 20px 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .hero h1 {
            font-size: 42px;
            margin-bottom: 20px;
            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
        }

        .hero p {
            font-size: 22px;
            margin-bottom: 30px;
        }

        .hero button {
            background-color: white;
            color: #007bff;
            padding: 12px 25px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            margin: 10px;
            transition: background-color 0.3s, color 0.3s;
        }

        .hero button:hover {
            background-color: #0056b3;
            color: white;
        }

        .greeting {
            margin-bottom: 30px;
            font-size: 26px;
            font-weight: bold;
        }

        .overview, .transactions, .services, .news, .expenses, .income {
            margin-bottom: 30px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s, color 0.3s;
        }

        .dark-theme .overview, .dark-theme .transactions, .dark-theme .services, 
        .dark-theme .news, .dark-theme .expenses, .dark-theme .income {
            background: #2c2c2c;
            color: #e0e0e0;
        }

        .overview h2, .transactions h2, .services h2, .news h2, .expenses h2, .income h2 {
            font-size: 28px;
            margin-bottom: 20px;
            border-bottom: 2px solid #007bff;
            padding-bottom: 10px;
        }

        .summary-widgets {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
        }

        .widget {
            background-color: #007bff;
            color: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            flex: 1 1 calc(50% - 20px);
            margin: 10px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .dark-theme .widget {
            background-color: #0d47a1;
        }

        .transactions table, .expenses table, .income table {
            width: 100%;
            border-collapse: collapse;
            font-size: 16px;
        }

        .transactions th, .transactions td, .expenses th, .expenses td, .income th, .income td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        .transactions th, .expenses th, .income th {
            background-color: #f4f4f9;
            font-weight: bold;
        }

        

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .add-button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        .add-button:hover {
            background-color: #0056b3;
        }

        .list-item {
            background-color: #f9f9f9;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 16px;
            transition: background-color 0.3s, border-color 0.3s;
        }

        .dark-theme .list-item {
            background-color: #333;
            border-color: #555;
        }

        .theme-toggle {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            margin-bottom: 20px;
        }

        .dark-theme .theme-toggle {
            background-color: #4fc3f7;
            color: #121212;
        }

        .crypto-dashboard {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }

        .graph-container {
            flex: 2;
            height: 300px;
        }

        .crypto-sidebar {
            flex: 1;
        }

        .crypto-item {
            background: #f0f0f0;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
        }

        .dark-theme .crypto-item {
            background: #333;
        }

        #cryptoChart {
            width: 100%;
            height: 100%;
        }
    </style>
    <!--IMPORTANT-->
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo" onclick="scrollToTop()">FinancialX</div>
        <nav>
            <ul>
                <li><a href="/main">Home</a></li>
                <li><a href="/services">Services</a></li>
                <li><a href="/logout">Logout</a></li>
                <li><a href="/settings">Settings</a></li>
                <li><button class="theme-toggle">Toggle Theme</button></li>
            </ul>
        </nav>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Hero Section -->
        <section class="hero">
            <h1>Welcome to FinancialX</h1>
            <p>Your one-stop solution for financial management</p>
            <button>Get Started</button>
            <button>Learn More</button>
        </section>

        <!-- User Greeting -->
        <h1>Hello, <%= name %>!</h1>

        <!-- Financial Overview -->
        <section class="overview">
            <h2>Financial Overview</h2>
            <div class="summary-widgets">
                <div class="widget">Account Balance: $<%= accountBalance.toFixed(2) %></div>
                <div class="widget">Total Investments: $<%= totalInvestments.toFixed(2) %></div>
            </div>
        </section>

        <!-- Services Section -->
        <section class="services">
            <h2>Business Opportunities</h2>
            <div class="service">
                <h3>Cryptocurrency Dashboard</h3>
                <p>Track real-time cryptocurrency values and trends.</p>
                <div class="crypto-dashboard">
                    <div class="graph-container">
                        <canvas id="cryptoChart" class="graph"></canvas>
                    </div>
                    <div class="crypto-sidebar">
                        <h3>Cryptocurrency Values</h3>
                        <div id="crypto-data">
                            <!-- Cryptocurrency data will be populated here -->
                        </div>
                        <p id="last-updated">Last updated: [Loading...]</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Expense Tracking Section -->
        <section class="expenses">
            <div class="section-header">
                <h2>Expenses Total: $<%= totalExpenses.toFixed(2) %></h2>
                <button class="add-button" id="addExpenseButton">Add Expense</button>
            </div>
            <% expenses.forEach(expense => { %>
                <div class="list-item">
                    <span><%= expense.date.toDateString() %> - <%= expense.description %></span>
                    <span>$<%= expense.amount %></span>
                </div>
            <% }) %>
        </section>

        <!-- Income Tracking Section -->
        <section class="income">
            <div class="section-header">
                <h2>Income Total: $<%= totalIncome.toFixed(2) %></h2>
                <button class="add-button" id="addIncomeButton">Add Income</button>
            </div>
            <% incomes.forEach(income => { %>
                <div class="list-item">
                    <span><%= income.date.toDateString() %> - <%= income.description %></span>
                    <span>$<%= income.amount %></span>
                </div>
            <% }) %>
        </section>

    
</body>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    function scrollToTop() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }

    document.addEventListener('DOMContentLoaded', (event) => {
            // Get the buttons by their IDs
            const addExpenseButton = document.getElementById('addExpenseButton');
            const addIncomeButton = document.getElementById('addIncomeButton');
            const businessButton = document.getElementById('businessButton')
            // Add click event listeners to the buttons
            addExpenseButton.addEventListener('click', () => {
                window.location.href = '/add-expenses';
            });

            addIncomeButton.addEventListener('click', () => {
                window.location.href = '/add-income';
            });
            businessButton.addEventListener('click', () => {
                window.location.href = '/business';
            });
        });

    // Theme toggle functionality
    document.querySelector('.theme-toggle').addEventListener('click', function() {
        document.body.classList.toggle('dark-theme');
    });

    // Cryptocurrency chart and data logic
    const ctx = document.getElementById('cryptoChart').getContext('2d');
    let chart;

    function createChart(isDarkTheme) {
        if (chart) {
            chart.destroy();
        }
        chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
                datasets: [{
                    label: 'Bitcoin Price (USD)',
                    data: [29000, 32000, 31000, 33000, 35000, 34000, 30000],
                    borderColor: isDarkTheme ? 'rgb(79, 195, 247)' : 'rgb(25, 118, 210)',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: false,
                        grid: {
                            color: isDarkTheme ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'
                        },
                        ticks: {
                            color: isDarkTheme ? '#e0e0e0' : '#333'
                        }
                    },
                    x: {
                        grid: {
                            color: isDarkTheme ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'
                        },
                        ticks: {
                            color: isDarkTheme ? '#e0e0e0' : '#333'
                        }
                    }
                },
                plugins: {
                    legend: {
                        labels: {
                            color: isDarkTheme ? '#e0e0e0' : '#333'
                        }
                    }
                }
            }
        });
    }

    function updateCryptoData() {
        console.log('Updating crypto data...');
        fetch('/api/crypto-data?_=' + new Date().getTime())
            .then(response => response.json())
            .then(data => {
                console.log('Received data:', data);
                const cryptoDataElement = document.getElementById('crypto-data');
                cryptoDataElement.innerHTML = ''; // Clear existing data
                const cryptoNames = ['BTC', 'ETH', 'LTC', 'XRP', 'ADA']; // Predefined list of crypto names
                data.rates.forEach((rate, index) => {
                    const item = document.createElement('div');
                    item.className = 'crypto-item';
                    item.innerHTML = `
                        <h4>${cryptoNames[index]}</h4>
                        <p>Current Value: $${(1 / rate.rate).toFixed(2)}</p>
                    `;
                    cryptoDataElement.appendChild(item);
                });
                document.getElementById('last-updated').textContent = `Last updated: ${new Date().toLocaleString()}`;
            })
            .catch(error => {
                console.error('Error fetching crypto data:', error);
                document.getElementById('last-updated').textContent = `Error updating data. Last attempt: ${new Date().toLocaleString()}`;
            });
    }

    createChart(document.body.classList.contains('dark-theme'));
    updateCryptoData(); // Initial update
    setInterval(updateCryptoData, 3000000); // Update every 30 minutes
    //**dont make it too often, it will end the amount of requests you can make to the api**

    // Update chart when theme changes
    document.querySelector('.theme-toggle').addEventListener('click', function() {
        createChart(document.body.classList.contains('dark-theme'));
    });

    // Update data when the page is refreshed
    window.addEventListener('load', updateCryptoData);
</script>

</html>